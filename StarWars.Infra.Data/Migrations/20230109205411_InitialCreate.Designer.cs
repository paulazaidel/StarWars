// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarWars.Infra.Data.Context;

#nullable disable

namespace StarWars.Infra.Data.Migrations
{
    [DbContext(typeof(StarWarsContext))]
    [Migration("20230109205411_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("ClimatePlanet", b =>
                {
                    b.Property<int>("ClimatesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClimatesId", "PlanetsId");

                    b.HasIndex("PlanetsId");

                    b.ToTable("PlanetClimates", (string)null);
                });

            modelBuilder.Entity("FilmPlanet", b =>
                {
                    b.Property<int>("FilmsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanetsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilmsId", "PlanetsId");

                    b.HasIndex("PlanetsId");

                    b.ToTable("PlanetFilms", (string)null);
                });

            modelBuilder.Entity("PlanetTerrain", b =>
                {
                    b.Property<int>("PlanetsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TerrainsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlanetsId", "TerrainsId");

                    b.HasIndex("TerrainsId");

                    b.ToTable("PlanetTerrains", (string)null);
                });

            modelBuilder.Entity("StarWars.Domain.Entities.Climate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Climates", (string)null);
                });

            modelBuilder.Entity("StarWars.Domain.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Films", (string)null);
                });

            modelBuilder.Entity("StarWars.Domain.Entities.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Planets", (string)null);
                });

            modelBuilder.Entity("StarWars.Domain.Entities.Terrain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Terrains", (string)null);
                });

            modelBuilder.Entity("ClimatePlanet", b =>
                {
                    b.HasOne("StarWars.Domain.Entities.Climate", null)
                        .WithMany()
                        .HasForeignKey("ClimatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Domain.Entities.Planet", null)
                        .WithMany()
                        .HasForeignKey("PlanetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmPlanet", b =>
                {
                    b.HasOne("StarWars.Domain.Entities.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Domain.Entities.Planet", null)
                        .WithMany()
                        .HasForeignKey("PlanetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlanetTerrain", b =>
                {
                    b.HasOne("StarWars.Domain.Entities.Planet", null)
                        .WithMany()
                        .HasForeignKey("PlanetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Domain.Entities.Terrain", null)
                        .WithMany()
                        .HasForeignKey("TerrainsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
